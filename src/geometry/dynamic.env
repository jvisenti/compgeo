
// a dynamic scene with moving obstacles of all shapes and sizes

// import meshes for reuse within this file
import block.mesh as Cube
import pyramid.mesh as Pyramid

new Environment
{
	set Dynamic =
	{
		1
	}

	set Size =
	{
		8, 8, 8
	}

	set ActiveObject = new Model
	{
		set Position = 
		{
			0, 0, 5
		}

		set Scale =
		{
			1, 1, 1
		}

		set Mesh = Pyramid
	}

	set Obstacles = 
	{
		new Model
		{

			set Scale =
			{
				4, 3, 1
			}

			set Motion = new Motion
			{
				set Loop =
				{
					0
				}

				set Path =
				{
					-4, 0, -0.5,
					-3, 0, -0.5,
					-2, 0, -0.5,
					-1, 0, -0.5
				}

				set Duration =
				{
					4
				}
			}

			set Mesh = Cube
		}

		new Model
		{

			set Scale =
			{
				4, 3, 1
			}

			set Motion = new Motion
			{
				set Loop =
				{
					0
				}

				set Path =
				{
					4, 0, 0.5,
					3, 0, 0.5,
					2, 0, 0.5,
					1, 0, 0.5
				}

				set Duration =
				{
					4
				}
			}

			set Mesh = Cube
		}

		new Model
		{

			set Scale =
			{
				5, 3, 1
			}

			set Motion = new Motion
			{
				set Loop =
				{
					0
				}

				set Path =
				{
					0, -6, -3,
					0, -4, -3,
					0, -2, -3,
					0, 0, -3,
					0, 2, -3,
					0, 4, -3,
					0, 6, -3
				}

				set Duration =
				{
					7
				}
			}

			set Mesh = Cube
		}

		new Model
		{
			set Scale =
			{
				2, 2, 2
			}

			set Motion = new Motion
			{
				set Path =
				{
					0, -2, 3,
					1, -2.5, 2,
					2, -3, 1,
					3, -2.5, 0,
					2, -2, -1,
					1, -2.5, -2,
					0, -3, -3,
					-1, -2.5, -2,
					-2, -2, -1,
					-3, -2.5, 0,
					-2, -3, 1,
					-1, -2.5, 2,
				}

				set Duration =
				{
					12
				}
			}

			set Mesh = Pyramid
		}

		new Model
		{
			set Scale =
			{
				2, 3, 2
			}

			set Motion = new Motion
			{
				set Path =
				{
					0, 3, 3.5,
					1, 2, 3.5,
					2, 1, 3.5,
					3, 0, 3.5,
					2, 0, 3.5,
					1, 0, 3.5,
					0, 0, 3.5,
					-1, 0, 3.5,
					-2, 0, 3.5,
					-3, 0, 3.5,
					-2, 1, 3.5,
					-1, 2, 3.5,
				}

				set Duration =
				{
					8
				}
			}

			set Mesh = Pyramid
		}
	}
}